apiVersion: v1
data:
  instance.json: |-
    {
      "repo": "pytest-dev/pytest",
      "instance_id": "pytest-dev__pytest-7168",
      "base_commit": "4787fd64a4ca0dba5528b5651bddd254102fe9f3",
      "patch": "diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\n--- a/src/_pytest/_io/saferepr.py\n+++ b/src/_pytest/_io/saferepr.py\n@@ -20,7 +20,7 @@ def _format_repr_exception(exc: BaseException, obj: Any) -> str:\n     except BaseException as exc:\n         exc_info = \"unpresentable exception ({})\".format(_try_repr_or_str(exc))\n     return \"<[{} raised in repr()] {} object at 0x{:x}>\".format(\n-        exc_info, obj.__class__.__name__, id(obj)\n+        exc_info, type(obj).__name__, id(obj)\n     )\n \n \n",
      "test_patch": "diff --git a/testing/io/test_saferepr.py b/testing/io/test_saferepr.py\n--- a/testing/io/test_saferepr.py\n+++ b/testing/io/test_saferepr.py\n@@ -154,3 +154,20 @@ def test_pformat_dispatch():\n     assert _pformat_dispatch(\"a\") == \"'a'\"\n     assert _pformat_dispatch(\"a\" * 10, width=5) == \"'aaaaaaaaaa'\"\n     assert _pformat_dispatch(\"foo bar\", width=5) == \"('foo '\\n 'bar')\"\n+\n+\n+def test_broken_getattribute():\n+    \"\"\"saferepr() can create proper representations of classes with\n+    broken __getattribute__ (#7145)\n+    \"\"\"\n+\n+    class SomeClass:\n+        def __getattribute__(self, attr):\n+            raise RuntimeError\n+\n+        def __repr__(self):\n+            raise RuntimeError\n+\n+    assert saferepr(SomeClass()).startswith(\n+        \"<[RuntimeError() raised in repr()] SomeClass object at 0x\"\n+    )\n",
      "problem_statement": "INTERNALERROR when exception in __repr__\nMinimal code to reproduce the issue: \r\n```python\r\nclass SomeClass:\r\n    def __getattribute__(self, attr):\r\n        raise\r\n    def __repr__(self):\r\n        raise\r\ndef test():\r\n    SomeClass().attr\r\n```\r\nSession traceback:\r\n```\r\n============================= test session starts ==============================\r\nplatform darwin -- Python 3.8.1, pytest-5.4.1, py-1.8.1, pluggy-0.13.1 -- /usr/local/opt/python@3.8/bin/python3.8\r\ncachedir: .pytest_cache\r\nrootdir: ******\r\nplugins: asyncio-0.10.0, mock-3.0.0, cov-2.8.1\r\ncollecting ... collected 1 item\r\n\r\ntest_pytest.py::test \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/main.py\", line 191, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/main.py\", line 247, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/main.py\", line 272, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\", line 85, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\", line 100, in runtestprotocol\r\nINTERNALERROR>     reports.append(call_and_report(item, \"call\", log))\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\", line 188, in call_and_report\r\nINTERNALERROR>     report = hook.pytest_runtest_makereport(item=item, call=call)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/skipping.py\", line 129, in pytest_runtest_makereport\r\nINTERNALERROR>     rep = outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\", line 260, in pytest_runtest_makereport\r\nINTERNALERROR>     return TestReport.from_item_and_call(item, call)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/reports.py\", line 294, in from_item_and_call\r\nINTERNALERROR>     longrepr = item.repr_failure(excinfo)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/python.py\", line 1513, in repr_failure\r\nINTERNALERROR>     return self._repr_failure_py(excinfo, style=style)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/nodes.py\", line 355, in _repr_failure_py\r\nINTERNALERROR>     return excinfo.getrepr(\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 634, in getrepr\r\nINTERNALERROR>     return fmt.repr_excinfo(self)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 879, in repr_excinfo\r\nINTERNALERROR>     reprtraceback = self.repr_traceback(excinfo_)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 823, in repr_traceback\r\nINTERNALERROR>     reprentry = self.repr_traceback_entry(entry, einfo)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 784, in repr_traceback_entry\r\nINTERNALERROR>     reprargs = self.repr_args(entry) if not short else None\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\", line 693, in repr_args\r\nINTERNALERROR>     args.append((argname, saferepr(argvalue)))\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 82, in saferepr\r\nINTERNALERROR>     return SafeRepr(maxsize).repr(obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 51, in repr\r\nINTERNALERROR>     s = _format_repr_exception(exc, x)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 23, in _format_repr_exception\r\nINTERNALERROR>     exc_info, obj.__class__.__name__, id(obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 47, in repr\r\nINTERNALERROR>     s = super().repr(x)\r\nINTERNALERROR>   File \"/usr/local/Cellar/python@3.8/3.8.1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/reprlib.py\", line 52, in repr\r\nINTERNALERROR>     return self.repr1(x, self.maxlevel)\r\nINTERNALERROR>   File \"/usr/local/Cellar/python@3.8/3.8.1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/reprlib.py\", line 62, in repr1\r\nINTERNALERROR>     return self.repr_instance(x, level)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 60, in repr_instance\r\nINTERNALERROR>     s = _format_repr_exception(exc, x)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 23, in _format_repr_exception\r\nINTERNALERROR>     exc_info, obj.__class__.__name__, id(obj)\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 56, in repr_instance\r\nINTERNALERROR>     s = repr(x)\r\nINTERNALERROR>   File \"/Users/stiflou/Documents/projets/apischema/tests/test_pytest.py\", line 6, in __repr__\r\nINTERNALERROR>     raise\r\nINTERNALERROR> RuntimeError: No active exception to reraise\r\n\r\n============================ no tests ran in 0.09s ============================\r\n```\n",
      "hints_text": "This only happens when both `__repr__` and `__getattribute__` are broken, which is a very odd scenario.\n```\r\nclass SomeClass:\r\n    def __getattribute__(self, attr):\r\n        raise Exception()\r\n\r\n    def bad_method(self):\r\n        raise Exception()\r\n\r\ndef test():\r\n    SomeClass().bad_method()\r\n\r\n```\r\n\r\n```\r\n============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.7.7, pytest-5.4.1.dev154+gbe6849644, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/k/pytest, inifile: tox.ini\r\nplugins: asyncio-0.11.0, hypothesis-5.10.4\r\ncollected 1 item                                                                                                                                                                                                 \r\n\r\ntest_internal.py F                                                                                                                                                                                         [100%]\r\n\r\n==================================================================================================== FAILURES ====================================================================================================\r\n______________________________________________________________________________________________________ test ______________________________________________________________________________________________________\r\n\r\n    def test():\r\n>       SomeClass().bad_method()\r\n\r\ntest_internal.py:12: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <test_internal.SomeClass object at 0x7fa550a8f6d0>, attr = 'bad_method'\r\n\r\n    def __getattribute__(self, attr):\r\n>       raise Exception()\r\nE       Exception\r\n\r\ntest_internal.py:6: Exception\r\n============================================================================================ short test summary info =============================================================================================\r\nFAILED test_internal.py::test - Exception\r\n=============================================================================================== 1 failed in 0.07s ================================================================================================\r\n```\r\n\r\n```\r\nclass SomeClass:\r\n    def __repr__(self):\r\n        raise Exception()\r\n\r\n    def bad_method(self):\r\n        raise Exception()\r\n\r\ndef test():\r\n    SomeClass().bad_method()\r\n\r\n```\r\n\r\n\r\n```\r\n============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.7.7, pytest-5.4.1.dev154+gbe6849644, py-1.8.1, pluggy-0.13.1\r\nrootdir: /home/k/pytest, inifile: tox.ini\r\nplugins: asyncio-0.11.0, hypothesis-5.10.4\r\ncollected 1 item                                                                                                                                                                                                 \r\n\r\ntest_internal.py F                                                                                                                                                                                         [100%]\r\n\r\n==================================================================================================== FAILURES ====================================================================================================\r\n______________________________________________________________________________________________________ test ______________________________________________________________________________________________________\r\n\r\n    def test():\r\n>       SomeClass().bad_method()\r\n\r\ntest_internal.py:9: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <[Exception() raised in repr()] SomeClass object at 0x7f0fd38ac910>\r\n\r\n    def bad_method(self):\r\n>       raise Exception()\r\nE       Exception\r\n\r\ntest_internal.py:6: Exception\r\n============================================================================================ short test summary info =============================================================================================\r\nFAILED test_internal.py::test - Exception\r\n=============================================================================================== 1 failed in 0.07s ================================================================================================\r\n```\n> This only happens when both `__repr__` and `__getattribute__` are broken, which is a very odd scenario.\r\n\r\nIndeed, I admit that's a very odd scenario (I've faced it when working on some black magic mocking stuff). However, I've opened this issue because I haven't dived into pytest code and maybe it will be understood better by someone who could see in it a more important underlying issue.\nThe problem is most likely here:\r\n\r\n```\r\nINTERNALERROR>   File \"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\", line 23, in _format_repr_exception\r\nINTERNALERROR>     exc_info, obj.__class__.__name__, id(obj)\r\n```\r\n\r\nspecifically, `obj.__class__` raises, but this isn't expected or handled by `saferepr`. Changing this to `type(obj).__name__` should work.",
      "created_at": "2020-05-05T22:23:38Z",
      "version": "5.4",
      "FAIL_TO_PASS": "[\"testing/io/test_saferepr.py::test_simple_repr\", \"testing/io/test_saferepr.py::test_maxsize\", \"testing/io/test_saferepr.py::test_maxsize_error_on_instance\", \"testing/io/test_saferepr.py::test_exceptions\", \"testing/io/test_saferepr.py::test_baseexception\", \"testing/io/test_saferepr.py::test_buggy_builtin_repr\", \"testing/io/test_saferepr.py::test_big_repr\", \"testing/io/test_saferepr.py::test_repr_on_newstyle\", \"testing/io/test_saferepr.py::test_unicode\", \"testing/io/test_saferepr.py::test_pformat_dispatch\", \"testing/io/test_saferepr.py::test_broken_getattribute\"]",
      "PASS_TO_PASS": "[]",
      "environment_setup_commit": "678c1a0745f1cf175c442c719906a1f13e496910"
    }
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"instance.json":"{\n  \"repo\": \"pytest-dev/pytest\",\n  \"instance_id\": \"pytest-dev__pytest-7168\",\n  \"base_commit\": \"4787fd64a4ca0dba5528b5651bddd254102fe9f3\",\n  \"patch\": \"diff --git a/src/_pytest/_io/saferepr.py b/src/_pytest/_io/saferepr.py\\n--- a/src/_pytest/_io/saferepr.py\\n+++ b/src/_pytest/_io/saferepr.py\\n@@ -20,7 +20,7 @@ def _format_repr_exception(exc: BaseException, obj: Any) -\u003e str:\\n     except BaseException as exc:\\n         exc_info = \\\"unpresentable exception ({})\\\".format(_try_repr_or_str(exc))\\n     return \\\"\u003c[{} raised in repr()] {} object at 0x{:x}\u003e\\\".format(\\n-        exc_info, obj.__class__.__name__, id(obj)\\n+        exc_info, type(obj).__name__, id(obj)\\n     )\\n \\n \\n\",\n  \"test_patch\": \"diff --git a/testing/io/test_saferepr.py b/testing/io/test_saferepr.py\\n--- a/testing/io/test_saferepr.py\\n+++ b/testing/io/test_saferepr.py\\n@@ -154,3 +154,20 @@ def test_pformat_dispatch():\\n     assert _pformat_dispatch(\\\"a\\\") == \\\"'a'\\\"\\n     assert _pformat_dispatch(\\\"a\\\" * 10, width=5) == \\\"'aaaaaaaaaa'\\\"\\n     assert _pformat_dispatch(\\\"foo bar\\\", width=5) == \\\"('foo '\\\\n 'bar')\\\"\\n+\\n+\\n+def test_broken_getattribute():\\n+    \\\"\\\"\\\"saferepr() can create proper representations of classes with\\n+    broken __getattribute__ (#7145)\\n+    \\\"\\\"\\\"\\n+\\n+    class SomeClass:\\n+        def __getattribute__(self, attr):\\n+            raise RuntimeError\\n+\\n+        def __repr__(self):\\n+            raise RuntimeError\\n+\\n+    assert saferepr(SomeClass()).startswith(\\n+        \\\"\u003c[RuntimeError() raised in repr()] SomeClass object at 0x\\\"\\n+    )\\n\",\n  \"problem_statement\": \"INTERNALERROR when exception in __repr__\\nMinimal code to reproduce the issue: \\r\\n```python\\r\\nclass SomeClass:\\r\\n    def __getattribute__(self, attr):\\r\\n        raise\\r\\n    def __repr__(self):\\r\\n        raise\\r\\ndef test():\\r\\n    SomeClass().attr\\r\\n```\\r\\nSession traceback:\\r\\n```\\r\\n============================= test session starts ==============================\\r\\nplatform darwin -- Python 3.8.1, pytest-5.4.1, py-1.8.1, pluggy-0.13.1 -- /usr/local/opt/python@3.8/bin/python3.8\\r\\ncachedir: .pytest_cache\\r\\nrootdir: ******\\r\\nplugins: asyncio-0.10.0, mock-3.0.0, cov-2.8.1\\r\\ncollecting ... collected 1 item\\r\\n\\r\\ntest_pytest.py::test \\r\\nINTERNALERROR\u003e Traceback (most recent call last):\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/main.py\\\", line 191, in wrap_session\\r\\nINTERNALERROR\u003e     session.exitstatus = doit(config, session) or 0\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/main.py\\\", line 247, in _main\\r\\nINTERNALERROR\u003e     config.hook.pytest_runtestloop(session=session)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/hooks.py\\\", line 286, in __call__\\r\\nINTERNALERROR\u003e     return self._hookexec(self, self.get_hookimpls(), kwargs)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\\\", line 93, in _hookexec\\r\\nINTERNALERROR\u003e     return self._inner_hookexec(hook, methods, kwargs)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\\\", line 84, in \u003clambda\u003e\\r\\nINTERNALERROR\u003e     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\\\", line 208, in _multicall\\r\\nINTERNALERROR\u003e     return outcome.get_result()\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\\\", line 80, in get_result\\r\\nINTERNALERROR\u003e     raise ex[1].with_traceback(ex[2])\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\\\", line 187, in _multicall\\r\\nINTERNALERROR\u003e     res = hook_impl.function(*args)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/main.py\\\", line 272, in pytest_runtestloop\\r\\nINTERNALERROR\u003e     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/hooks.py\\\", line 286, in __call__\\r\\nINTERNALERROR\u003e     return self._hookexec(self, self.get_hookimpls(), kwargs)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\\\", line 93, in _hookexec\\r\\nINTERNALERROR\u003e     return self._inner_hookexec(hook, methods, kwargs)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\\\", line 84, in \u003clambda\u003e\\r\\nINTERNALERROR\u003e     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\\\", line 208, in _multicall\\r\\nINTERNALERROR\u003e     return outcome.get_result()\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\\\", line 80, in get_result\\r\\nINTERNALERROR\u003e     raise ex[1].with_traceback(ex[2])\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\\\", line 187, in _multicall\\r\\nINTERNALERROR\u003e     res = hook_impl.function(*args)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\\\", line 85, in pytest_runtest_protocol\\r\\nINTERNALERROR\u003e     runtestprotocol(item, nextitem=nextitem)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\\\", line 100, in runtestprotocol\\r\\nINTERNALERROR\u003e     reports.append(call_and_report(item, \\\"call\\\", log))\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\\\", line 188, in call_and_report\\r\\nINTERNALERROR\u003e     report = hook.pytest_runtest_makereport(item=item, call=call)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/hooks.py\\\", line 286, in __call__\\r\\nINTERNALERROR\u003e     return self._hookexec(self, self.get_hookimpls(), kwargs)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\\\", line 93, in _hookexec\\r\\nINTERNALERROR\u003e     return self._inner_hookexec(hook, methods, kwargs)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/manager.py\\\", line 84, in \u003clambda\u003e\\r\\nINTERNALERROR\u003e     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\\\", line 203, in _multicall\\r\\nINTERNALERROR\u003e     gen.send(outcome)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/skipping.py\\\", line 129, in pytest_runtest_makereport\\r\\nINTERNALERROR\u003e     rep = outcome.get_result()\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\\\", line 80, in get_result\\r\\nINTERNALERROR\u003e     raise ex[1].with_traceback(ex[2])\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/pluggy/callers.py\\\", line 187, in _multicall\\r\\nINTERNALERROR\u003e     res = hook_impl.function(*args)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/runner.py\\\", line 260, in pytest_runtest_makereport\\r\\nINTERNALERROR\u003e     return TestReport.from_item_and_call(item, call)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/reports.py\\\", line 294, in from_item_and_call\\r\\nINTERNALERROR\u003e     longrepr = item.repr_failure(excinfo)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/python.py\\\", line 1513, in repr_failure\\r\\nINTERNALERROR\u003e     return self._repr_failure_py(excinfo, style=style)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/nodes.py\\\", line 355, in _repr_failure_py\\r\\nINTERNALERROR\u003e     return excinfo.getrepr(\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\\\", line 634, in getrepr\\r\\nINTERNALERROR\u003e     return fmt.repr_excinfo(self)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\\\", line 879, in repr_excinfo\\r\\nINTERNALERROR\u003e     reprtraceback = self.repr_traceback(excinfo_)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\\\", line 823, in repr_traceback\\r\\nINTERNALERROR\u003e     reprentry = self.repr_traceback_entry(entry, einfo)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\\\", line 784, in repr_traceback_entry\\r\\nINTERNALERROR\u003e     reprargs = self.repr_args(entry) if not short else None\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_code/code.py\\\", line 693, in repr_args\\r\\nINTERNALERROR\u003e     args.append((argname, saferepr(argvalue)))\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\\\", line 82, in saferepr\\r\\nINTERNALERROR\u003e     return SafeRepr(maxsize).repr(obj)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\\\", line 51, in repr\\r\\nINTERNALERROR\u003e     s = _format_repr_exception(exc, x)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\\\", line 23, in _format_repr_exception\\r\\nINTERNALERROR\u003e     exc_info, obj.__class__.__name__, id(obj)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\\\", line 47, in repr\\r\\nINTERNALERROR\u003e     s = super().repr(x)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/Cellar/python@3.8/3.8.1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/reprlib.py\\\", line 52, in repr\\r\\nINTERNALERROR\u003e     return self.repr1(x, self.maxlevel)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/Cellar/python@3.8/3.8.1/Frameworks/Python.framework/Versions/3.8/lib/python3.8/reprlib.py\\\", line 62, in repr1\\r\\nINTERNALERROR\u003e     return self.repr_instance(x, level)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\\\", line 60, in repr_instance\\r\\nINTERNALERROR\u003e     s = _format_repr_exception(exc, x)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\\\", line 23, in _format_repr_exception\\r\\nINTERNALERROR\u003e     exc_info, obj.__class__.__name__, id(obj)\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\\\", line 56, in repr_instance\\r\\nINTERNALERROR\u003e     s = repr(x)\\r\\nINTERNALERROR\u003e   File \\\"/Users/stiflou/Documents/projets/apischema/tests/test_pytest.py\\\", line 6, in __repr__\\r\\nINTERNALERROR\u003e     raise\\r\\nINTERNALERROR\u003e RuntimeError: No active exception to reraise\\r\\n\\r\\n============================ no tests ran in 0.09s ============================\\r\\n```\\n\",\n  \"hints_text\": \"This only happens when both `__repr__` and `__getattribute__` are broken, which is a very odd scenario.\\n```\\r\\nclass SomeClass:\\r\\n    def __getattribute__(self, attr):\\r\\n        raise Exception()\\r\\n\\r\\n    def bad_method(self):\\r\\n        raise Exception()\\r\\n\\r\\ndef test():\\r\\n    SomeClass().bad_method()\\r\\n\\r\\n```\\r\\n\\r\\n```\\r\\n============================================================================================== test session starts ===============================================================================================\\r\\nplatform linux -- Python 3.7.7, pytest-5.4.1.dev154+gbe6849644, py-1.8.1, pluggy-0.13.1\\r\\nrootdir: /home/k/pytest, inifile: tox.ini\\r\\nplugins: asyncio-0.11.0, hypothesis-5.10.4\\r\\ncollected 1 item                                                                                                                                                                                                 \\r\\n\\r\\ntest_internal.py F                                                                                                                                                                                         [100%]\\r\\n\\r\\n==================================================================================================== FAILURES ====================================================================================================\\r\\n______________________________________________________________________________________________________ test ______________________________________________________________________________________________________\\r\\n\\r\\n    def test():\\r\\n\u003e       SomeClass().bad_method()\\r\\n\\r\\ntest_internal.py:12: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\n\\r\\nself = \u003ctest_internal.SomeClass object at 0x7fa550a8f6d0\u003e, attr = 'bad_method'\\r\\n\\r\\n    def __getattribute__(self, attr):\\r\\n\u003e       raise Exception()\\r\\nE       Exception\\r\\n\\r\\ntest_internal.py:6: Exception\\r\\n============================================================================================ short test summary info =============================================================================================\\r\\nFAILED test_internal.py::test - Exception\\r\\n=============================================================================================== 1 failed in 0.07s ================================================================================================\\r\\n```\\r\\n\\r\\n```\\r\\nclass SomeClass:\\r\\n    def __repr__(self):\\r\\n        raise Exception()\\r\\n\\r\\n    def bad_method(self):\\r\\n        raise Exception()\\r\\n\\r\\ndef test():\\r\\n    SomeClass().bad_method()\\r\\n\\r\\n```\\r\\n\\r\\n\\r\\n```\\r\\n============================================================================================== test session starts ===============================================================================================\\r\\nplatform linux -- Python 3.7.7, pytest-5.4.1.dev154+gbe6849644, py-1.8.1, pluggy-0.13.1\\r\\nrootdir: /home/k/pytest, inifile: tox.ini\\r\\nplugins: asyncio-0.11.0, hypothesis-5.10.4\\r\\ncollected 1 item                                                                                                                                                                                                 \\r\\n\\r\\ntest_internal.py F                                                                                                                                                                                         [100%]\\r\\n\\r\\n==================================================================================================== FAILURES ====================================================================================================\\r\\n______________________________________________________________________________________________________ test ______________________________________________________________________________________________________\\r\\n\\r\\n    def test():\\r\\n\u003e       SomeClass().bad_method()\\r\\n\\r\\ntest_internal.py:9: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\n\\r\\nself = \u003c[Exception() raised in repr()] SomeClass object at 0x7f0fd38ac910\u003e\\r\\n\\r\\n    def bad_method(self):\\r\\n\u003e       raise Exception()\\r\\nE       Exception\\r\\n\\r\\ntest_internal.py:6: Exception\\r\\n============================================================================================ short test summary info =============================================================================================\\r\\nFAILED test_internal.py::test - Exception\\r\\n=============================================================================================== 1 failed in 0.07s ================================================================================================\\r\\n```\\n\u003e This only happens when both `__repr__` and `__getattribute__` are broken, which is a very odd scenario.\\r\\n\\r\\nIndeed, I admit that's a very odd scenario (I've faced it when working on some black magic mocking stuff). However, I've opened this issue because I haven't dived into pytest code and maybe it will be understood better by someone who could see in it a more important underlying issue.\\nThe problem is most likely here:\\r\\n\\r\\n```\\r\\nINTERNALERROR\u003e   File \\\"/usr/local/lib/python3.8/site-packages/_pytest/_io/saferepr.py\\\", line 23, in _format_repr_exception\\r\\nINTERNALERROR\u003e     exc_info, obj.__class__.__name__, id(obj)\\r\\n```\\r\\n\\r\\nspecifically, `obj.__class__` raises, but this isn't expected or handled by `saferepr`. Changing this to `type(obj).__name__` should work.\",\n  \"created_at\": \"2020-05-05T22:23:38Z\",\n  \"version\": \"5.4\",\n  \"FAIL_TO_PASS\": \"[\\\"testing/io/test_saferepr.py::test_simple_repr\\\", \\\"testing/io/test_saferepr.py::test_maxsize\\\", \\\"testing/io/test_saferepr.py::test_maxsize_error_on_instance\\\", \\\"testing/io/test_saferepr.py::test_exceptions\\\", \\\"testing/io/test_saferepr.py::test_baseexception\\\", \\\"testing/io/test_saferepr.py::test_buggy_builtin_repr\\\", \\\"testing/io/test_saferepr.py::test_big_repr\\\", \\\"testing/io/test_saferepr.py::test_repr_on_newstyle\\\", \\\"testing/io/test_saferepr.py::test_unicode\\\", \\\"testing/io/test_saferepr.py::test_pformat_dispatch\\\", \\\"testing/io/test_saferepr.py::test_broken_getattribute\\\"]\",\n  \"PASS_TO_PASS\": \"[]\",\n  \"environment_setup_commit\": \"678c1a0745f1cf175c442c719906a1f13e496910\"\n}"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"instance-pytest-dev--pytest-7168-configmap","namespace":"testbeds"}}
  creationTimestamp: "2024-07-19T14:30:19Z"
  name: instance-pytest-dev--pytest-7168-configmap
  namespace: testbed-dev
  resourceVersion: "5591019"
  uid: d86ef0d2-852d-46cd-925d-a0d03de6fc7e
